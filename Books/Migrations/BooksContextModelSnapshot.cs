// <auto-generated />
using System;
using Books.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.Migrations
{
    [DbContext(typeof(BooksContext))]
    partial class BooksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new { Id = new Guid("7e024344-2e8f-4221-9dd4-30a1a1583e19"), FirstName = "George", LastName = "RR Martin" },
                        new { Id = new Guid("80a69425-841f-4a41-bb76-066edbcc27ca"), FirstName = "Stephen", LastName = "Fry" },
                        new { Id = new Guid("4801a767-7686-42d8-bc5d-21be5e77f09a"), FirstName = "Douglas", LastName = "Adams" }
                    );
                });

            modelBuilder.Entity("Books.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Description")
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new { Id = new Guid("c1db50b3-d8f3-46f9-b206-7670642f59f9"), AuthorId = new Guid("3cd38d75-3902-412c-9505-a5cd94655224"), Description = "The book that seems impossible to write.", Title = "The Winds of Winter" },
                        new { Id = new Guid("085f56b1-22a2-4e7e-ad87-95f53fbbb4a5"), AuthorId = new Guid("b4bf6403-d0f1-44a1-aa91-d9495b7b6e2d"), Description = "The Greek myths are amongst the best stories ever told.", Title = "Mythos" },
                        new { Id = new Guid("a82f3d1b-b73a-4c9b-baa2-dde17ace455a"), AuthorId = new Guid("0d7550d9-fdeb-4251-9ba7-5d54d28639b6"), Description = "American Tabloid is a 1995 novel by James Ellroy.", Title = "American Tabloid" },
                        new { Id = new Guid("ccf51053-355c-4761-a316-6a6524b6a32d"), AuthorId = new Guid("5f677fd5-ed28-4b7c-a4bb-0bf8470c6865"), Description = "In the Hitchhiker's Guide to the Galaxy.", Title = "The Hitchhiker's Guide to the Galaxy" }
                    );
                });

            modelBuilder.Entity("Books.Entities.Book", b =>
                {
                    b.HasOne("Books.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
